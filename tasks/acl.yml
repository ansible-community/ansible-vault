### Block used to read or create the Vault token used by all Vault Servers

- block: 

    - name: Read Vault Agent token from previously bootstrapped server
      command: "cat {{ consul_config_path }}/.agent_token"
      register: vault_config_read
      no_log: true
      run_once: true
    
    - name: Register Vault ACL Token for future uses
      set_fact:
        consul_acl_vault_token: "{{ vault_config_read.stdout }}"

  when:
    - acl_vault_state.stat.exists | bool
    - (consul_acl_vault_token is not defined or consul_acl_vault_token | length == 0)
    - consul_node_role == 'client'

- block:
    - name: Create Vault ACL Policy on Consul
      uri:
        body_format: json
        body: |
            {
              "Name": "{{ consul_vault_policy_name }}",
              "Description": "Consul Vault token",
              "Rules": "{{ lookup('file', 'vault_acl.json') }}"
            }
        method: PUT
        url: http://{{ consul_bind_address }}:8500/v1/acl/policy
        headers:
          X-Consul-Token: "{{ consul_acl_bootstrap_token }}"
      run_once: true
      ignore_errors: true
  
    - name: Generate Vault Token
      uri: 
        body_format: json
        body: |
          {
            "Description": "Vault token",
            "Policies": [{"Name": "{{ consul_vault_policy_name }}"}],
            "Local": false
          }
        method: PUT
        url: http://{{ consul_bind_address }}:8500/v1/acl/token
        headers:
          X-Consul-Token: "{{ consul_acl_bootstrap_token }}"
        return_content: yes
      register: consul_acl_vault_token_keygen
      run_once: true
    
    - name: Store Vault ACL Secret ID locally
      copy:
        content: "{{ consul_acl_vault_token_keygen.json.SecretID }}"
        dest: "{{ consul_config_path }}/.vault_token"
        owner: "{{ consul_user }}"
        group: "{{ consul_group }}"
        mode: 0640
      
    - name: Create Vault bootstrapped state file
      file:
        dest: "{{ consul_acl_vault_state }}"
        state: touch 
    
    - name: Register Vault ACL Token for future uses
      set_fact:
        consul_acl_vault_token: "{{ consul_acl_vault_token_keygen.json.SecretID }}"

  when: 
    - not acl_vault_state.stat.exists | bool
    - (consul_acl_vault_token is not defined or consul_acl_vault_token | length == 0)
    - consul_node_role == 'client'

    
  
