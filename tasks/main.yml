---
# File: tasks/main.yml - Main tasks for Vault

- name: Include asserts
  include: asserts.yml

- name: "Add Vault user"
  user:
    name: "{{ vault_user }}"
    comment: "Vault user"
    group: "{{ vault_group }}"
    system: yes
  when: vault_manage_user | bool

- name: Include OS-specific variables
  include_vars: "{{ ansible_os_family }}.yml"

- name: Install OS packages and Vault Enterprise via control host
  include: install_enterprise.yml
  when:
    - vault_enterprise | bool
    - not vault_install_remotely | bool

- name: Install OS packages and Vault via control host
  include: install.yml
  when:
    - not vault_enterprise | bool
    - not vault_install_remotely | bool

- name: Install OS packages and Vault via remote hosts
  include: install_remote.yml
  when:
    - not vault_enterprise | bool
    - vault_install_remotely | bool

- name: Enable non root mlock capability
  command: "setcap cap_ipc_lock=+ep {{ vault_bin_path }}/vault"

- name: Create directories
  file:
    dest: "{{ item }}"
    state: directory
    owner: "{{ vault_user }}"
    group: "{{ vault_group}}"
  with_items:
    - "{{ vault_config_path }}"
    - "{{ vault_data_path }}"
    - "{{ vault_log_path }}"
    - "{{ vault_run_path }}"

- name: TLS configuration
  include: ../tasks/tls.yml
  when: vault_tls_disable == 0

- name: Listener configuration
  template:
    src: vault_listener.hcl.j2
    dest: "{{ vault_main_config }}"
    owner:  "{{ vault_user }}"
    group:  "{{ vault_group }}"
    mode: "0400"
  notify: Restart vault


- name: BSD init script
  template:
    src: vault_bsdinit.j2
    dest: /etc/rc.d/vault
    owner: root
    group: wheel
    mode: "0755"
  when: ansible_os_family == "FreeBSD"

- name: SYSV init script
  template:
    src: vault_sysvinit.j2
    dest: /etc/init.d/vault
    owner: root
    group: root
    mode: "0755"
  when:
    - not ansible_service_mgr == "systemd"
    - not ansible_os_family == "Debian"
    - not ansible_os_family == "FreeBSD"
    - not ansible_os_family == "Solaris"

- name: Debian init script
  template:
    src: vault_debian.init.j2
    dest: /etc/init.d/vault
    owner: root
    group: root
    mode: "0755"
  when:
    - not ansible_service_mgr == "systemd"
    - ansible_os_family == "Debian"
    - not ansible_os_family == "FreeBSD"
    - not ansible_os_family == "Solaris"

- name: systemd unit
  template:
    src: vault_systemd.service.j2
    dest: /lib/systemd/system/vault.service
    owner: root
    group: root
    mode: "0644"
  when:
    - ansible_service_mgr == "systemd"
    - not ansible_os_family == "FreeBSD"
    - not ansible_os_family == "Solaris"

- name: Start Vault
  service:
    name: vault
    state: started
    enabled: yes

- name: Restart Vault if needed
  meta: flush_handlers

- name: Vault API reachable? If not please unseal it
  uri:
    validate_certs: "{{ validate_certs_during_api_reachable_check | bool }}"
    url: "{{ vault_tls_disable | ternary('http', 'https') }}://{{ (vault_address == '0.0.0.0') | ternary('127.0.0.1', vault_address) }}:{{ vault_port }}/v1/sys/health"
    method: GET
    # 200 if initialized, unsealed, and active. 429 is also OK for HA cluster (means standby + unsealed in HA)
    status_code: "{{ vault_cluster_disable | ternary('200', '200, 429') }}"
    body_format: json
  register: check_result
  retries: 30
  until: check_result is succeeded
  delay: 10
  changed_when: false
