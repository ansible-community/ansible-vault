---
# File: tasks/install_hashi_repo.yml
#       Install Vault via HashiCorp Linux repository

- name: Add Vault/Hashicorp rpm repo
  yum_repository:
    name: hashicorp
    description: Hashicorp Stable - $basearch
    baseurl: "{{ vault_repository_url }}"
    gpgkey: "{{ vault_repository_key_url }}"
    gpgcheck: true
    enabled: true
  become: true
  when:
    - ansible_pkg_mgr in ['yum', 'dnf']
    - not vault_rhsm_repo_id

- name: Add Vault/Hashicorp apt key
  apt_key:
    url: "{{ vault_repository_key_url }}"
    state: present
  become: true
  when: ansible_pkg_mgr == 'apt'

- name: Add Vault/Hashicorp apt repo
  apt_repository:
    repo: "deb {{ vault_repository_url }} {{ ansible_distribution_release }} main"
    state: present
  become: true
  when: ansible_pkg_mgr == 'apt'

- name: Attach RHSM subscription / repo
  when: (vault_rhsm_repo_id)
  become: true
  block:
    - name: Check if Hashicorp/Vault RHSM repo subscription is enabled
      command:
        cmd: "subscription-manager list --consumed --matches={{ vault_rhsm_subscription_name | quote }} --pool-only"
      register: _subscription_manager_consumed
      changed_when: false
      when: (vault_rhsm_subscription_name)

    - name: Find Hashicorp/Vault RHSM repo subscription pool id
      command:
        cmd: "subscription-manager list --available --matches={{ vault_rhsm_subscription_name | quote }} --pool-only"
      register: _subscription_manager_available
      changed_when: false
      when:
        - (vault_rhsm_subscription_name)
        - _subscription_manager_consumed.stdout | length <= 0

    - name: Attach Hashicorp/Vault RHSM subscription
      command:
        cmd: "subscription-manager attach --pool={{ _subscription_manager_available.stdout }}"
      register: _subscription_manager_attach
      changed_when: _subscription_manager_attach.stdout is search('Successfully attached a subscription')
      failed_when: _subscription_manager_attach.stdout is search('could not be found')
      when:
        - (vault_rhsm_subscription_name)
        - _subscription_manager_consumed.stdout | default() | length <= 0
        - _subscription_manager_available.stdout | default() | length > 0

    - name: Enable RHSM repository
      rhsm_repository:
        name: "{{ vault_rhsm_repo_id }}"
        state: enabled

- name: Install Vault package
  package:
    name: "{{ _vault_repo_pkg }}"
    state: present
  become: true
  vars:
    _vault_repo_pkg: "{% if (ansible_pkg_mgr in ['yum', 'dnf']) %}\
                  vault-{{ vault_version }}\
                {% elif (ansible_pkg_mgr == 'apt') %}\
                  vault={{ vault_version }}\
                {% else %}\
                  vault={{ vault_version }}\
                {% endif %}"

- name: Mask default Vault config from package
  become: true
  copy:
    owner: root
    group: root
    mode: "0644"
    dest: /etc/vault.d/vault.hcl
    content: |
      # Placeholder to mask default RPM/DPKG Vault config file.
      #
      # Package-installed config would interfere with Ansible-managed config files
      # in this directory. Keeping an empty placeholder prevents package updates
      # from re-installing the default config.
  when: ansible_pkg_mgr in ['yum', 'dnf', 'apt']
