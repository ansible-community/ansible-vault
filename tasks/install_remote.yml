---
# File: tasks/install_remote.yml
#       Package installation tasks for vault

- name: OS packages
  become: true
  package:
    name: "{{ vault_os_packages }}"
    state: present
  tags: installation

- name: Ensure remote vault dir exists
  file:
    path: /tmp/vault
    state: directory
    mode: 0750

- name: Check Vault package checksum file
  stat:
    path: "/tmp/vault/{{ vault_shasums }}"
  register: vault_checksum

- name: Get Vault package checksum file
  get_url:
    url: "{{ vault_checksum_file_url }}"
    dest: "/tmp/vault/{{ vault_shasums }}"
  tags: installation
  when: not vault_checksum.stat.exists | bool

- name: Get Vault package checksum
  shell: "grep {{ vault_pkg }} /tmp/vault/{{ vault_shasums }}"
  register: vault_sha256
  tags:
    - installation
    - skip_ansible_lint

- name: Check Vault package file
  stat:
    path: "/tmp/vault/{{ vault_pkg }}"
  register: vault_package
  tags: installation

- name: "Download Vault â†’ {{ vault_zip_url }}"
  get_url:
    url: "{{ vault_zip_url }}"
    dest: "/tmp/vault/{{ vault_pkg }}"
    checksum: "sha256:{{ vault_sha256.stdout.split(' ')|first }}"
    timeout: "42"
  tags: installation
  when: not vault_package.stat.exists | bool

- name: Unarchive Vault and install binary
  become: true
  unarchive:
    remote_src: true
    src: "/tmp/vault/{{ vault_pkg }}"
    dest: "{{ vault_bin_path }}"
    owner: "{{ vault_user }}"
    group: "{{ vault_group }}"
    mode: "0755"
  notify: Restart vault
  tags: installation

- name: Cleanup
  file:
    path: "/tmp/vault"
    state: absent
  tags: installation
