---
# File: tasks/install_enterprise.yml
#       Vault Enterprise package installation tasks

- name: OS packages
  package:
    name: "{{ item }}"
    state: present
  with_items: "{{ vault_os_packages }}"
  tags: installation

- name: "[Enterprise] Check {{ role_path }}/files/{{ vault_enterprise_shasums }}"
  local_action: stat path="{{ role_path }}/files/{{ vault_enterprise_shasums }}"
  become: no
  run_once: true
  register: vault_checksum

- name: "[Enterprise] Get SHA SUM from {{ role_path }}/files/{{ vault_enterprise_shasums }}"
  local_action: shell grep "{{ vault_enterprise_pkg }}" "{{ role_path }}/files/{{ vault_enterprise_shasums }}" | awk '{print $1}'
  become: no
  run_once: true
  register: vault_sha256
  tags: installation

- name: "[Enterprise] Check {{ role_path }}/files/{{ vault_enterprise_pkg }}"
  local_action: stat path="{{ role_path }}/files/{{ vault_enterprise_pkg }}"
  become: no
  run_once: true
  register: vault_package

- name: "[Enterprise] Download vault version {{ vault_version }}"
  local_action: get_url  url={{ vault_zip_url }} dest={{ role_path }}/files/{{ vault_pkg }} checksum=sha256:{{ vault_sha256.stdout }} timeout=42
  become: no
  run_once: true
  tags: installation
  when: not vault_package.stat.exists | bool

- name: "[Enterprise] Unzip {{ role_path }}/files/{{ vault_enterprise_pkg }}"
  local_action: unarchive src="{{ role_path }}/files/{{ vault_enterprise_pkg }}" dest="{{ role_path }}/files/" creates="{{ role_path }}/files/vault"
  become: no
  run_once: true
  tags: installation

- name: "[Enterprise] Install version {{ vault_version }}"
  copy:
    src: "{{ role_path }}/files/vault"
    dest: "{{ vault_bin_path }}"
    owner: "{{ vault_user }}"
    group: "{{ vault_group }}"
    mode: "0755"
  tags: installation

- name: "[Enterprise] Remove {{ role_path }}/files/vault"
  local_action: file path="{{ item }}" state="absent"
  become: no
  with_fileglob: "{{ role_path }}/files/vault"
  run_once: true
  tags: installation
